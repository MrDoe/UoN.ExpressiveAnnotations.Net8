<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddressDetailsFormatInvalid" xml:space="preserve">
    <value>Format adresu powinien zaczynać się od prefixu 'Ulica'.</value>
  </data>
  <data name="AddressDetailsTooShort" xml:space="preserve">
    <value>Wprowadź więcej znaków niż tylko prefix '{StreetPrefix}'...</value>
  </data>
  <data name="Age" xml:space="preserve">
    <value>Wiek</value>
  </data>
  <data name="AgreeForContact" xml:space="preserve">
    <value>Zgoda na kontakt</value>
  </data>
  <data name="AgreeForContactRequired" xml:space="preserve">
    <value>Twoja zgoda jest wymagana w celu nawiązania kontaktu.</value>
  </data>
  <data name="AssertionNotSatisfied" xml:space="preserve">
    <value>Założenie dla pola {0} nie jest spełnione dla następującej logiki: {1}</value>
  </data>
  <data name="AwareOfTheRisks" xml:space="preserve">
    <value>Jestem świadomy ewentualnych zagrożeń</value>
  </data>
  <data name="AwareOfTheRisksRequired" xml:space="preserve">
    <value>Musisz potwierdzić, że jesteś świadomy istniejących zagrożeń.</value>
  </data>
  <data name="BloodType" xml:space="preserve">
    <value>Typ krwi</value>
  </data>
  <data name="BloodTypeInvalid" xml:space="preserve">
    <value>Nieznany typ krwi...</value>
  </data>
  <data name="BloodTypeRequired" xml:space="preserve">
    <value>Typ krwi jest wymagany jeśli uprawiasz sporty ekstremalne, lub planujesz wyjechać za granicę i uprawiasz jakikolwiek sport.</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Komentarz</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Kraj</value>
  </data>
  <data name="CustomizedAssertThatDefaultError" xml:space="preserve">
    <value>Warunek dla pola {0} nie jest spełniony - tekst '{コメント}' jest za krótki.</value>
  </data>
  <data name="CustomizedRequiredIfDefaultError" xml:space="preserve">
    <value>Pole {0} jest warunkowo wymagane.</value>
  </data>
  <data name="DigitsOnlyAccepted" xml:space="preserve">
    <value>Tylko cyfry są dozwolone.</value>
  </data>
  <data name="Donation" xml:space="preserve">
    <value>Darowizna [USD]</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="EmailFormatInvalid" xml:space="preserve">
    <value>Podany adres e-mail ma nieprawidłowy format.</value>
  </data>
  <data name="EmailOrPhoneRequired" xml:space="preserve">
    <value>Nie podałeś żadnej informacji kontaktowej. Przynajmniej e-mail lub telefon powinien być podany.</value>
  </data>
  <data name="Extreme" xml:space="preserve">
    <value>Ekstremalny</value>
  </data>
  <data name="FieldConditionallyRequired" xml:space="preserve">
    <value>Pole {0} jest wymagane ponieważ wymusza go następująca logika: {1}</value>
  </data>
  <data name="FieldRequired" xml:space="preserve">
    <value>Pole {0} jest wymagane.</value>
  </data>
  <data name="FlightId" xml:space="preserve">
    <value>Identyfikator lotu</value>
  </data>
  <data name="FlightIdentifierInvalid" xml:space="preserve">
    <value>Podany identyfikator lotu jest nieprawidłowy.</value>
  </data>
  <data name="France" xml:space="preserve">
    <value>Francja</value>
  </data>
  <data name="FutureDateRequired" xml:space="preserve">
    <value>Data nie może wskazywać na czas przeszły.</value>
  </data>
  <data name="Germany" xml:space="preserve">
    <value>Niemcy</value>
  </data>
  <data name="GoAbroad" xml:space="preserve">
    <value>Jadę za granicę</value>
  </data>
  <data name="High" xml:space="preserve">
    <value>Wysoka</value>
  </data>
  <data name="HomeAddress" xml:space="preserve">
    <value>Adres domowy</value>
  </data>
  <data name="ID" xml:space="preserve">
    <value>Dowód osobisty</value>
  </data>
  <data name="Identification" xml:space="preserve">
    <value>Dokument tożsamości</value>
  </data>
  <data name="IdentificationValue" xml:space="preserve">
    <value>Numer dokumentu</value>
  </data>
  <data name="IDNumberInvalid" xml:space="preserve">
    <value>Niepoprawny numer dowodu (wymagane 3 litery i 6 cyfr)</value>
  </data>
  <data name="IDNumberMissing" xml:space="preserve">
    <value>Numer dowodu jest wymagany</value>
  </data>
  <data name="ImmediateContact" xml:space="preserve">
    <value>Kontakt natychmiastowy</value>
  </data>
  <data name="ImmediateContactRequired" xml:space="preserve">
    <value>Czy powinniśmy się skontaktować jak najszybciej?</value>
  </data>
  <data name="JustAFewCharsMore" xml:space="preserve">
    <value>Jeszcze kilka znaków więcej...</value>
  </data>
  <data name="LatestSuggestedReturnDate" xml:space="preserve">
    <value>Najpóźniejsza sugerowana data</value>
  </data>
  <data name="Low" xml:space="preserve">
    <value>Niska</value>
  </data>
  <data name="MoreThanAWeekRequired" xml:space="preserve">
    <value>Minimalny okres pobytu wynosi tydzień.</value>
  </data>
  <data name="NextCountry" xml:space="preserve">
    <value>Następny kraj</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Nie</value>
  </data>
  <data name="NoMoreThanAYear" xml:space="preserve">
    <value>Maksymalny okres pobytu wynosi rok.</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Brak</value>
  </data>
  <data name="Normal" xml:space="preserve">
    <value>Rekreacyjny</value>
  </data>
  <data name="NotEnoughDonations" xml:space="preserve">
    <value>Większa ilość oddzielnych darowizn jest wymagana: jeśli pole {GoAbroad:N} jest zaznaczone - przynajmniej 3, w przeciwnym wypadku - przynajmniej 2.</value>
  </data>
  <data name="OfficeAddress" xml:space="preserve">
    <value>Adres służbowy</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Inny</value>
  </data>
  <data name="Passport" xml:space="preserve">
    <value>Paszport</value>
  </data>
  <data name="PassportNumberInvalid" xml:space="preserve">
    <value>Niepoprawny numer paszportu (wymagane 2 litery i 7 cyfr)</value>
  </data>
  <data name="PassportNumberMissing" xml:space="preserve">
    <value>Numer paszportu jest wymagany</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Telefon</value>
  </data>
  <data name="Poland" xml:space="preserve">
    <value>Polska</value>
  </data>
  <data name="PoliticalStability" xml:space="preserve">
    <value>Stabilnośc polityczna</value>
  </data>
  <data name="RangeViolated" xml:space="preserve">
    <value>Numer telefonu powinien zawierać od 9 do 15 cyfr.</value>
  </data>
  <data name="ReasonForLongTravel" xml:space="preserve">
    <value>Powody długiej podróży</value>
  </data>
  <data name="ReasonForLongTravelRequired" xml:space="preserve">
    <value>Jeśli planujesz przebywać za granicą dłużej niż miesiąc, podaj powody.</value>
  </data>
  <data name="ReasonForTravel" xml:space="preserve">
    <value>Powody podróży</value>
  </data>
  <data name="ReasonForTravelRequired" xml:space="preserve">
    <value>Jeśli planujesz wyjechać za granicę i jesteś w wieku 25-55 lat lub planujesz odwiedzić dwukrotnie ten sam obcy kraj, podaj powody.</value>
  </data>
  <data name="ReasonForTravelRequiredForYouth" xml:space="preserve">
    <value>Jeśli planujesz jakąkolwiek podróż i nie masz ukończonych 18 lat (wskazałeś w polu {Age:N} wartość {Age}, tak - {Age:N} {Age}), podaj powody (PS. {Country}... dobry wybór).</value>
  </data>
  <data name="ReturnDate" xml:space="preserve">
    <value>Data powrotu</value>
  </data>
  <data name="SecretAnswerDetected" xml:space="preserve">
    <value>Przepraszamy, ale to nie jest pytanie dotyczące zwierząt.</value>
  </data>
  <data name="SelectDate" xml:space="preserve">
    <value>Wybierz datę</value>
  </data>
  <data name="SpamAllowed" xml:space="preserve">
    <value>Zgadzam się na otrzymywanie informacji</value>
  </data>
  <data name="SpamForbidden" xml:space="preserve">
    <value>Nie zgadzam sie na otrzymywanie informacji</value>
  </data>
  <data name="SportType" xml:space="preserve">
    <value>Ulubione sporty</value>
  </data>
  <data name="StreetPrefix" xml:space="preserve">
    <value>Ulica</value>
  </data>
  <data name="Uncertain" xml:space="preserve">
    <value>Niepewna</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Tak</value>
  </data>
  <data name="China" xml:space="preserve">
    <value>Chiny</value>
  </data>
  <data name="Israel" xml:space="preserve">
    <value>Izrael</value>
  </data>
  <data name="Japan" xml:space="preserve">
    <value>Japonia</value>
  </data>
  <data name="KnownLanguages" xml:space="preserve">
    <value>Znane języki</value>
  </data>
  <data name="LanguagesSelectionInsufficient" xml:space="preserve">
    <value>Musisz znać więcej niż jeden język.</value>
  </data>
  <data name="SelectCurrency" xml:space="preserve">
    <value>Zaznacz walutę.</value>
  </data>
</root>